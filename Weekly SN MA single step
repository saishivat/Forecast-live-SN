# Import the domomagic package into the script 
#from domomagic import *
import pandas as pd

# read data from inputs into a data frame
df1 = pd.read_excel('/content/Unpivot weekly.xlsx')

# Create an empty DataFrame to store the new rows
new_df = pd.DataFrame()
start_Week = df1[df1['Year']=='2023']['Week'].max()
end_Week = start_Week+26

for region in df1['CC Region'].unique():
    new_Date = pd.date_range(start= start_Week, end=end_Week, freq='W').tolist()

    # Create a DataFrame with the new dates
    new_data = pd.DataFrame({'date': new_Date})
    #new_data['Month'] = new_data['date'].dt.month
    #new_data['Month Name'] = new_data['date'].dt.strftime('%B')
    new_data['Year'] = new_data['date'].dt.year
    new_data['Week'] = new_data['date'].dt.week
    new_data['CC Region'] = region  # Set the 'CC Region' column
    new_data['Calls Answered']=0
    #new_data['weekmonth'] = new_data['Week']+ new_data['Month']


    # Append the new data for this 'CC Region' to the main DataFrame
    new_df = pd.concat([new_df, new_data])

# Concatenate the new data with your existing DataFrame
df1 = pd.concat([df1, new_df])

# Reset the index
df1.reset_index(drop=True, inplace=True)
df1.sort_values(by =['CC Region','Year', 'Month', 'Week'],inplace=True)
print(df1[180:220])

df1['weekmonth'] = df1['Week']+ df1['Month']

df1.sort_values(by =['CC Region','Year', 'weekmonth'],inplace=True)

# write your script here
for (region), group_df in df1.groupby(['CC Region']):
  start_index = 52
  end_index = len(group_df)
  
  for i in range(start_index, end_index): 
    df1.at[group_df.index[i], 'Variance CY'] = (df1.at[group_df.index[i], 'Calls Answered']-df1.at[group_df.index[i-52], 'Calls Answered'])/df1.at[group_df.index[i-52], 'Calls Answered']
    df1.at[group_df.index[i], 'Variance LY'] = df1.at[group_df.index[i-52],'Variance CY']
    df1.at[group_df.index[i], 'Average LY'] = (df1.at[group_df.index[i-52], 'Calls Answered']+df1.at[group_df.index[i-104], 'Calls Answered'])/2
    sum_i = df1.at[group_df.index[i-1],'Variance CY'] + df1.at[group_df.index[i-2],'Variance CY']+ df1.at[group_df.index[i-3],'Variance CY']
    df1.at[group_df.index[i], 'sum_i'] = sum_i

    df1.at[group_df.index[i], 'CY-Predicted'] = df1.at[group_df.index[i], 'Average LY'] * (1 + (sum_i + df1.at[group_df.index[i], 'Variance LY']) / 4)
    if df1.at[group_df.index[i], 'Variance CY'] == -1:
       df1.at[group_df.index[i], 'Variance CY'] = (df1.at[group_df.index[i], 'CY-Predicted'] - df1.at[group_df.index[i-52], 'Calls Answered']) / df1.at[group_df.index[i-52], 'Calls Answered']
    if pd.isnull(df1.at[group_df.index[i], 'Variance CY']):
       df1.at[group_df.index[i], 'Variance CY']=0
#Output
#df1=df1.drop(columns=['Variance CY', 'Variance LY', 'sum_i', 'Average LY'])

print(df1[150:200])
